name: Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root --no-interaction --with test,dev
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root --no-interaction --with test,dev
      - name: Test with pytest
        run: |
          python -m pytest tests

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [linters, tests]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ${{ secrets.REGISTRY_HOST }}
    steps:
      - name: Repository name to lowercase
        id: imagename
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Set SHA
        id: short_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.imagename.outputs.lowercase }}
          tags: |
            type=raw,value=latest,enable={{ is_default_branch }}
            type=ref,event=pr
            type=raw,value=FOO-${{ steps.short_sha.outputs.sha }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ steps.imagename.outputs.lowercase }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
